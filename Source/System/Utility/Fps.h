//*****************************************************************************
//
// FPS管理クラス
//
// Fps.h
//
// K_Yamaoka
//
// 2013/03/04
//
//*****************************************************************************

#pragma once

#include <Windows.h>
#include <MMSystem.h>

//静的ライブラリの設定
#pragma comment ( lib, "winmm.lib" )

class Fps
{
public:

	//=============================================================================
	// コンストラクタ
	//=============================================================================
	Fps();

	//=============================================================================
	// コンストラクタ
	// 引　数：リフレッシュレート（秒間のフレーム数）
	//=============================================================================
	Fps(const DWORD refreshRate);

	//=============================================================================
	// デストラクタ
	//=============================================================================
	~Fps();

	//=============================================================================
	// ＦＰＳの更新
	//=============================================================================
	void UpdateFPS();

	//=============================================================================
	// ＦＰＳの固定
	//=============================================================================
	void FixRefreshRate();

	//=============================================================================
	// ＦＰＳ値の取得
	// 戻り値：ＦＰＳ値
	//=============================================================================
	DWORD GetFPS() const;

private:

	//ＦＰＳ計測のための時間
	DWORD m_timeSaveFPS;

	//ＦＰＳ固定のための時間
	DWORD m_timeSaveFix;

	//リフレッシュレート
	DWORD m_refreshRate;

	//計測のためのカウンタ
	DWORD m_counter;

	//現在のＦＰＳ値
	DWORD m_nowFPS;

	//描画間隔
	DWORD m_timeInterval;

	//コピー防止
	Fps(const Fps&);
	Fps& operator=(const Fps&);
};












