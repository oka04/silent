//*****************************************************************************
//
// ＳＥ管理
//
// SEManage.h
//
// K_Yamaoka
//
// 2011/11/15
//
// 2014/11/28 エラーメッセージを追加
//
//*****************************************************************************

#pragma once

#include <d3dx9.h>

#include <windows.h>

#include <map>
#include <string>

#include "SE.h"

#include "..\\Exception\\DxSystemException.h"

//型定義
typedef IDirectMusicLoader8* LPDIRECTMUSICLOADER8;

//イテレータの型定義
typedef std::map< std::string, SE* >::iterator SE_ITER;

class SEManage
{
public:

	//=============================================================================
	// コンストラクタ
	//=============================================================================
	SEManage();

	//=============================================================================
	// デストラクタ
	//=============================================================================
	~SEManage();

	//=============================================================================
	// サウンド管理クラスの初期化
	// 引　数：HWND アプリケーションのウィンドウハンドル
	//=============================================================================
	void Initialize(const HWND hAppWnd);

	//=============================================================================
	// ＳＥの追加
	// 引　数：ＳＥファイル名
	//=============================================================================
	void AddSE(std::string strFileName);

	//=============================================================================
	// ＳＥの再生
	// 引　数：string ＳＥファイル名
	//=============================================================================
	void PlaySE(std::string strFileName);

	//=============================================================================
	// ＳＥの停止
	// 引　数：string ＳＥファイル名
	//=============================================================================
	void StopSE(std::string strFileName);

	//=============================================================================
	// ＳＥの削除（省メモリ対策）
	// 引　数：string ＳＥファイル名
	//=============================================================================
	void ReleaseSE(std::string strFileName);

	//=============================================================================
	// すべてのＳＥの停止
	// 戻り値：成功 true、失敗 false
	//=============================================================================
	void StopAllSE();

private:

	//パフォーマンスのアドレス格納用ポインタ
	LPDIRECTMUSICPERFORMANCE8 m_pPerformance;

	//ローダーのアドレス登録用ポインタ
	LPDIRECTMUSICLOADER8 m_pLoader;

	//ＳＥ管理用コンテナ
	std::map< std::string, SE* > m_mapSE;

	//同じSEの再生間隔（短すぎるとﾗﾝﾀｲﾑｴﾗｰが発生する）
	const DWORD PLAY_INTERVAL;

	//時間計測用
	DWORD m_timeStart;
	DWORD m_timeNow;
	DWORD m_timePass;

	//-----------------------------------------------------------------------------
	// すべてのＳＥの削除
	// 戻り値：成功 true、失敗 false
	//-----------------------------------------------------------------------------
	bool DeleteAllSE();

	//コピー防止
	SEManage& operator=(const SEManage&);
	SEManage(const SEManage&);
};