//*****************************************************************************
//
// ＳＥ
//
// SE.h
//
// K_Yamaoka
//
// 2011/11/15
//
//*****************************************************************************

#pragma once

#include <d3dx9.h>

#include <dmusici.h>

//型定義
typedef IDirectMusicPerformance8* LPDIRECTMUSICPERFORMANCE8;
typedef IDirectMusicSegment8* LPDIRECTMUSICSEGMENT8;

class SE
{
public:

	//=============================================================================
	// コンストラクタ
	//=============================================================================
	SE();

	//=============================================================================
	// デストラクタ
	//=============================================================================
	~SE();

	//=============================================================================
	// パフォーマンスのアドレスを登録
	// 引　数：LPDIRECTMUSICPERFORMANCE8 パフォーマンスのアドレス
	//=============================================================================
	void SetPerformancePointer(const LPDIRECTMUSICPERFORMANCE8 pPerformance);

	//=============================================================================
	// セグメントのアドレスを登録
	// 引　数：LPDIRECTMUSICSEGMENT8 セグメントのアドレス
	//=============================================================================
	void SetSegmentPointer(const LPDIRECTMUSICSEGMENT8 pSegment);

	//=============================================================================
	// セグメントが登録されているポインタのアドレスを取得
	// 戻り値：LPDIRECTMUSICSEGMENT8* セグメントが登録されているポインタのアドレス
	//=============================================================================
	LPDIRECTMUSICSEGMENT8* GetSegmentPointerAddress();

private:

	//パフォーマンスのアドレス登録用ポインタ
	//パフォーマンスは各ＳＥで共有して使用する
	static LPDIRECTMUSICPERFORMANCE8 m_pPerformance;

	//セグメントのアドレス登録用ポインタ
	LPDIRECTMUSICSEGMENT8 m_pSegment;

	//コピー防止
	SE& operator=(const SE&);
	SE(const SE&);
};