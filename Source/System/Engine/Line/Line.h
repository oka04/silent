//*****************************************************************************
//
// ラインクラス
//
// Line.h
//
// K_Yamaoka
//
// 2017/06/19
//
// 2020/11/26 Draw（３Ｄ用）をシェーダー対応にするため追加
//
//*****************************************************************************

#pragma once

#include <d3dx9.h>

#include "..\\Engine.h"

struct Line3DData {
	D3DXVECTOR3 position;
	D3DCOLORVALUE color;
};

class Line
{
public:

	//=============================================================================
	// コンストラクタ
	//=============================================================================
	Line();

	//=============================================================================
	// デストラクタ
	//=============================================================================
	~Line();

	//=============================================================================
	// 初期化
	// 引　数：デバイスのポインタ
	//=============================================================================
	void Initialize(LPDIRECT3DDEVICE9 pDevice);

	//=============================================================================
	// 描画（２Ｄ）
	// 引　数：頂点配列
	// 　　　　頂点の個数
	// 　　　　頂点カラー
	//=============================================================================
	void Draw(const D3DXVECTOR2 *pVertexList, DWORD dwVertexListCount, D3DCOLOR color);

	//=============================================================================
	// 描画（３Ｄ）
	// 引　数：開始位置（３Ｄベクトル）
	// 　　　　終了位置（３Ｄベクトル）
	// 　　　　線の色
	// 　　　　ビュー変換行列のポインタ
	// 　　　　プロジェクション変換行列のポインタ
	//=============================================================================
	void Draw(const D3DXVECTOR3 startPosition, const D3DXVECTOR3 endPosition, D3DCOLOR color, const D3DXMATRIX* pView, const D3DXMATRIX* pProjection);

private:

	LPDIRECT3DDEVICE9 m_pDevice;

	ID3DXLine* m_pLine;

	//エフェクト（シェーダー）
	ID3DXEffect* m_pEffect;

	//頂点宣言
	LPDIRECT3DVERTEXDECLARATION9 m_pVertexDeclaration;
};














