//*****************************************************************************
//
// フォント管理
//
// FontManage.h
//
// K_Yamaoka
//
// 2011/11/10
//
// 2016/12/02 フォントの追加、解放の戻り値をvoidに変更（エラーを返さない）
//
//*****************************************************************************

#pragma once

#include <d3dx9.h>
#include <string>
#include <map>

#include "..\\Exception\\DxSystemException.h"

#include "Font.h"

//イテレータの型定義
typedef std::map< std::string, Font* >::iterator FONT_ITER;

class FontManage
{
public:

	//=============================================================================
	// コンストラクタ
	//=============================================================================
	FontManage();

	//=============================================================================
	// デストラクタ
	//=============================================================================
	~FontManage();

	//=============================================================================
	// フォントの追加
	// 引　数：string   フォント名
	// 　　　　pClsFont フォントクラスのアドレス
	//=============================================================================
	void AddFont(std::string strFontName, Font* pClsFont);

	//=============================================================================
	// フォントの解放
	// 引　数：string フォント名
	//=============================================================================
	void ReleaseFont(std::string strFontName);

	//=============================================================================
	// フォントの一時解放（デバイスリセット用）
	//=============================================================================
	void ReleaseAllFont();

	//=============================================================================
	// フォントの再作成（デバイスリセット用）
	// 引　数：LPDIRECT3DDEVICE9 デバイスのポインタ
	//=============================================================================
	void ReloadAllFont(LPDIRECT3DDEVICE9 pDevice);

	//=============================================================================
	// フォントの探索
	// 戻り値：FontClass* フォントクラスのアドレス（未登録の場合nullptrが戻る）
	// 引　数：string     フォント名
	// 　　　　pClsFont   フォントクラスのアドレス
	//=============================================================================
	Font* SearchFont(std::string strFontName);

private:

	//フォント登録用コンテナ
	std::map< std::string, Font* > m_mapFont;

	//コピー防止
	FontManage& operator=(const FontManage&);
	FontManage(const FontManage&);
};














