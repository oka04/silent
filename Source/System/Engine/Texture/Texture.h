//*****************************************************************************
//
// 2D用テクスチャデータ
//
// Texture.h
//
// K_Yamaoka
//
// 2011/11/10
//
//*****************************************************************************

#pragma once

#include <d3dx9.h>

class Texture
{
public:

	//カラーキー用定数
	static const D3DCOLOR COLORKEY_NONE = 0x00000000;
	static const D3DCOLOR COLORKEY_WHITE = 0xFFFFFFFF;
	static const D3DCOLOR COLORKEY_PURPLE = 0xFFFF00FF;
	static const D3DCOLOR COLORKEY_BLACK = 0xFF000000;

	//=============================================================================
	// コンストラクタ
	//=============================================================================
	Texture();

	//=============================================================================
	// デストラクタ
	//=============================================================================
	~Texture();

	//=============================================================================
	// テクスチャーのアドレスを登録
	// 引　数：LPDIRECT3DTEXTURE9 テクスチャーのアドレス
	//=============================================================================
	void SetTexturePointer(const LPDIRECT3DTEXTURE9 pTexture);

	//=============================================================================
	// テクスチャーのアドレスを取得
	// 戻り値：LPDIRECT3DTEXTURE9 テクスチャーのアドレス
	//=============================================================================
	LPDIRECT3DTEXTURE9 GetTexturePointer() const;

	//=============================================================================
	// カラーキーを登録
	// 引　数：D3DCOLOR カラーキー
	//=============================================================================
	void SetColorKey(const D3DCOLOR colorKey);

	//=============================================================================
	// カラーキーを取得
	// 戻り値：D3DCOLOR カラーキー
	//=============================================================================
	D3DCOLOR GetColorKey() const;

private:

	//テクスチャーのアドレス
	LPDIRECT3DTEXTURE9 m_pTexture;

	//カラーキー
	D3DCOLOR m_colorKey;

	//コピー防止
	Texture& operator=(const Texture&);
	Texture(const Texture&);
};